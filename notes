List reRPC's imports: go list -f '{{ join .Imports "\n" }}'

Implement snappy?

Set header Te to "trailers" in clients.

Mentioned in the HTTP/2 protocol but not checked in handlers:
* scheme: Supposed to be one of "http" or "https," no error code defined.
  Given reRPC's focus on net/http-compatible servers, we're unlikely to
  encounter this.
* grpc-message-type: Not validated in grpc-go, grpc-java, or grpc-cpp. Not
  required to unmarshal messages, and validation actually reduces the number
  of wire-compatible changes.

From ejona's epic https://github.com/grpc/grpc/pull/15460:
By its very nature, the client and server's Deadline will be slightly different
and their detection of its expiration will race. When clients receive a
Cancellation on a Call with a Deadline, they should double-check whether the
Deadline has passed. If it has passed, they should override the cancellation
with Trailers with one that has a Status Code of DEADLINE_EXCEEDED.

[ ] Catch up with state of work - what did I get done?
[ ] Rename encoding to compression, fixing error messages in message.go
[ ] Change %v to %w in formatted error strings
[ ] Validate HTTP error codes are set correctly in gRPC mode
[ ] Validate JSON behavior
[ ] Implement grpc-web protocol (and re-familiarize myself with how it's different)
[ ] APIs for extracting metadata, propagating context, and setting headers
