// Code generated by "stringer -type=Code"; DO NOT EDIT.

package rerpc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CodeOK-0]
	_ = x[CodeCanceled-1]
	_ = x[CodeUnknown-2]
	_ = x[CodeInvalidArgument-3]
	_ = x[CodeDeadlineExceeded-4]
	_ = x[CodeNotFound-5]
	_ = x[CodeAlreadyExists-6]
	_ = x[CodePermissionDenied-7]
	_ = x[CodeResourceExhausted-8]
	_ = x[CodeFailedPrecondition-9]
	_ = x[CodeAborted-10]
	_ = x[CodeOutOfRange-11]
	_ = x[CodeUnimplemented-12]
	_ = x[CodeInternal-13]
	_ = x[CodeUnavailable-14]
	_ = x[CodeDataLoss-15]
	_ = x[CodeUnauthenticated-16]
	_ = x[minCode-0]
	_ = x[maxCode-16]
}

const _Code_name = "CodeOKCodeCanceledCodeUnknownCodeInvalidArgumentCodeDeadlineExceededCodeNotFoundCodeAlreadyExistsCodePermissionDeniedCodeResourceExhaustedCodeFailedPreconditionCodeAbortedCodeOutOfRangeCodeUnimplementedCodeInternalCodeUnavailableCodeDataLossCodeUnauthenticated"

var _Code_index = [...]uint16{0, 6, 18, 29, 48, 68, 80, 97, 117, 138, 160, 171, 185, 202, 214, 229, 241, 260}

func (i Code) String() string {
	if i < 0 || i >= Code(len(_Code_index)-1) {
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Code_name[_Code_index[i]:_Code_index[i+1]]
}
